#include "trig.h"
#define PI 3.141592

float sinLUT[255][9];
float cosLUT[255][9];

int factorial(int a) {
	if(a==0) return 1;
	return a*factorial(a-1);
}

float cosine(float);
 
float sine(float x) {
	if(x > (PI/2) || x < (-PI/2)){
		float d=x/2;
		return cosine(d)*sine(d)*2;
	}
	int i,j;
	float sine=0;
	float power;
	for(i=0;i<10;i++) {
		power=x;
		if(i!=0) {
			for(j=0;j<i*2;j++)
				power*=x;
		}
		if(i%2==1)
			power*=-1;
		sine+=power/factorial(2*i+1);
	}
	return sine;
}

float cosine(float x){
	float c,s;
	if(x > (PI/2) || x < (-PI/2)) {
		c=cosine(x/2);
		s=sine(x/2);
		return c*c-s*s;
	}
	int i,j;
	float cosine=0;
	float power;
	for(i=0;i<10;i++) {
		if(i==0) power=1;
		else power=x;
		if(i!=0) {
			for(j=0;j<i*2-1;j++)
				power*=x;
		}
		if(i%2==1)
			power*=-1;
		cosine+=power/factorial(2*i);
	}
	return cosine;	
}

void SinLUTInit(float (*lut)[9]) {
	xil_printf("gay\n\r");
    int b  = 1;
    for (int j = 0; j < 9; j++) {
    	for (int i = 0; i < 255; i++ ){
    		lut[i][j] = sin((double) -PI*i/b);
    	}
	b*= 2;
    }

}

void CosLUTInit(float (*lut)[9]){
	xil_printf("homo\n\r");
	int b  = 1;
	    for (int j = 0; j < 9; j++) {
	    	for (int i = 0; i < 255; i++ ){
	    		lut[i][j] = cos((double) -PI*i/b);
	    	}
		b*= 2;
	    }

}
