#include "note.h"
#include <stdio.h>
#include <Math.h>

//#include "lcd.h"

//array to store note names for findNote
static char notes[12][3]={"C","C#","D","D#","E","F","F#","G","G#","A","A#","B"};

//float noteFreqs[10];

float noteFreqs[13]; // pure note frequencies
float plusFiftyCents[12]; //all note frequencies + 50

void findNoteFreqs(int oct, int A4Val) {
	float AOct = A4Val * pow(2, oct - 4);
	float COct = AOct * pow(2, -9.0 / 12);
	noteFreqs[0] = COct;
	for (int i = 1; i < 13; i++) {
		noteFreqs[i] = noteFreqs[i - 1] * pow(2, 1.0 / 12);
	}
	for (int i = 0; i < 12; i++) {
		float dif = noteFreqs[i + 1] - noteFreqs[i];
		float FiftyCents = dif / 100 * 50;
		plusFiftyCents[i] = noteFreqs[i] + FiftyCents;
	}
	//print values:
	for (int i = 0; i < 12; i++) {

	}
	for (int i = 0; i < 12; i++) {

	}
}

//finds and prints note of frequency and deviation from note
void findNote(float f, XTmrCtr *timer) {
	float c=261.63;
	float r;
	int oct=4;
	int note=0;
	//determine which octave frequency is in
	if(f >= c) {
		while(f > c*2) {
			c=c*2;
			oct++;
		}
	}
	else { //f < C4
		while(f < c) {
			c=c/2;
			oct--;
		}
	
	}

	//find note below frequency
	//c=middle C
	r=c*root2;
	while(f > r) {
		c=c*root2;
		r=r*root2;
		note++;
	}
//	xil_printf("note: %s \r\n", (notes[note]));


	//determine which note frequency is closest to
	if((f-c) <= (r-f)) { //closer to left note
//		WriteString("N:");
//		WriteString(notes[note]);
//		WriteInt(oct);
//		WriteString(" D:+");
//		WriteInt((int)(f-c+.5));
//		WriteString("Hz");
		XTmrCtr_Stop(timer, 0);
		xil_printf("note: %s, D:+ %d Hz \r\n", (notes[note]), (int)(f-c+.5));
	}
	else { //f closer to right note
		note++;
		if(note >=12) note=0;
//		WriteString("N:");
//		WriteString(notes[note]);
//		WriteInt(oct);
//		WriteString(" D:-");
//		WriteInt((int)(r-f+.5));
//		WriteString("Hz");
		XTmrCtr_Stop(timer, 0);
		xil_printf("note: %s, D:- %d Hz \r\n", (notes[note]), (int)(r-f+.5));
	}

}
